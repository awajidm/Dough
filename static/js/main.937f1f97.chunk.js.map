{"version":3,"sources":["components/AppSidebar.js","components/Product/ProductCard.js","components/Product/Product.js","constants/stockConstants.js","components/Layout/AppHeader.js","components/Stock/MoveStockStepper.js","components/Stock/MoveStock.js","components/Stock/Stock.js","actions/stockActions.js","App.js","store.js","reducers/stockReducer.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","sidebarLogo","padding","sideButtons","width","button","textAlign","marginBottom","alignItems","justifyContent","paddingLeft","profile","margin","spacing","small","height","AppSidebar","classes","className","CssBaseline","Grid","container","item","xs","src","alt","Divider","Button","variant","color","startIcon","component","style","Box","mr","Badge","badgeContent","overlap","Avatar","Typography","borderRadius","header","paper","content","breakpoints","up","marginLeft","toolbar","mixins","backgroundColor","flexGrow","ALL_STOCK_REQUEST","ALL_STOCK_SUCCESS","ALL_STOCK_FAIL","CLEAR_ERROR","AppHeader","headerTitle","ButtonClick","buttonTitle","AppBar","position","Toolbar","title","onCLick","backButton","marginRight","instructions","marginTop","ChooseDestination","ChoosePickup","AddQonatities","CreateJob","getStepContent","stepIndex","MoveStockStepper","React","useState","activeStep","setActiveStep","steps","Stepper","alternativeLabel","map","label","Step","StepLabel","length","onClick","disabled","prevActiveStep","fullList","paddingTop","MoveStock","openDrawer","setOpenDrawer","size","Drawer","anchor","open","IconButton","table","Stock","dispatch","useDispatch","useSelector","state","stock","loading","error","useEffect","a","type","axios","get","data","payload","stocks","Table","TableHead","TableRow","TableCell","align","TableBody","scope","storeName","products","availableQty","storeId","createMuiTheme","palette","primary","main","pink","App","ThemeProvider","md","path","exact","reducer","combineReducers","action","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.937f1f97.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n//material-ui components imports\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n//material-ui Icons imports\r\nimport DashboardSharpIcon from \"@material-ui/icons/DashboardSharp\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\r\nimport MotorcycleOutlinedIcon from \"@material-ui/icons/MotorcycleOutlined\";\r\nimport TimelineOutlinedIcon from \"@material-ui/icons/TimelineOutlined\";\r\nimport PeopleOutlineIcon from \"@material-ui/icons/PeopleOutline\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  sidebarLogo: {\r\n    padding: 20,\r\n  },\r\n  sideButtons: {\r\n    width: \"auto\",\r\n    padding: 20,\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    textAlign: \"left\",\r\n    marginBottom: 10,\r\n    alignItems: \"start\",\r\n    justifyContent: \"start\",\r\n    paddingLeft: 10,\r\n  },\r\n  profile: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n    padding: theme.spacing(2),\r\n    alignItems: \"center\",\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst AppSidebar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid container>\r\n        <Grid item xs={12} className={classes.sidebarLogo}>\r\n          <img src=\"/images/Logo.png\" alt=\"Logo\" width={100} />\r\n        </Grid>\r\n        <Divider />\r\n        <Grid item xs={12} className={classes.sideButtons}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.button}\r\n            startIcon={<DashboardSharpIcon />}\r\n          >\r\n            Dashboard\r\n          </Button>\r\n          <Button\r\n            component=\"div\"\r\n            className={classes.button}\r\n            startIcon={<ShoppingCartOutlinedIcon />}\r\n          >\r\n            Product\r\n          </Button>\r\n          <Button className={classes.button} startIcon={<ReceiptIcon />}>\r\n            Transactions\r\n          </Button>\r\n          <Button\r\n            className={classes.button}\r\n            startIcon={<LocationOnOutlinedIcon />}\r\n          >\r\n            Stores\r\n          </Button>\r\n          <Button\r\n            className={classes.button}\r\n            startIcon={<MotorcycleOutlinedIcon />}\r\n          >\r\n            Riders\r\n          </Button>\r\n          <Button\r\n            className={classes.button}\r\n            startIcon={<TimelineOutlinedIcon />}\r\n          >\r\n            Analytics\r\n          </Button>\r\n          <Button className={classes.button} startIcon={<PeopleOutlineIcon />}>\r\n            Customers\r\n          </Button>\r\n          <Button className={classes.button} startIcon={<PersonIcon />}>\r\n            User\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12} style={{ paddingLeft: 20 }}>\r\n          <Box component=\"span\" mr={2}>\r\n            <Badge badgeContent={6} color=\"primary\" overlap=\"circle\">\r\n              <NotificationsNoneIcon />\r\n            </Badge>\r\n          </Box>\r\n          Notifications\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.profile}>\r\n          <Avatar\r\n            alt=\"Marry\"\r\n            src=\"/images/Logo.png\"\r\n            component=\"span\"\r\n            className={classes.small}\r\n          />\r\n          <Typography component=\"span\">Marry</Typography>\r\n          <ExpandMoreIcon />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppSidebar;\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport CreateSharpIcon from \"@material-ui/icons/CreateSharp\";\r\nimport DeleteForeverOutlinedIcon from \"@material-ui/icons/DeleteForeverOutlined\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 230,\r\n    borderRadius: 25,\r\n    margin: 20,\r\n  },\r\n  header: {\r\n    padding: 0,\r\n  },\r\n  paper: {\r\n    borderRadius: \"0px 0px 0px 20px\",\r\n    margin: 7,\r\n    padding: \"10px 25px\",\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 10,\r\n  },\r\n}));\r\n\r\nconst ProductCard = ({ name, subtitle, price, image, user }) => {\r\n  const classes = useStyles();\r\n\r\n  const ProductCreatorIcons = () => {\r\n    if (user === \"creator\") {\r\n      return (\r\n        <>\r\n          <IconButton aria-label=\"View\">\r\n            <VisibilityIcon />\r\n          </IconButton>\r\n          <IconButton aria-label=\"Edit\">\r\n            <CreateSharpIcon />\r\n          </IconButton>\r\n          <IconButton aria-label=\"Delete\">\r\n            <DeleteForeverOutlinedIcon />\r\n          </IconButton>\r\n        </>\r\n      );\r\n    } else if (user === \"user\") {\r\n      return (\r\n        <IconButton aria-label=\"View\">\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n      );\r\n    } else {\r\n      return <IconButton aria-label=\"View\"></IconButton>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root} raised>\r\n      <CardHeader\r\n        className={classes.header}\r\n        action={\r\n          <Paper className={classes.paper}>\r\n            <Typography>${price}</Typography>\r\n          </Paper>\r\n        }\r\n      />\r\n\r\n      <CardContent className={classes.content}>\r\n        <img height=\"120\" src={image} alt=\"Product 1\" />\r\n      </CardContent>\r\n\r\n      <CardContent className={classes.content}>\r\n        <Typography variant=\"h5\" component=\"p\">\r\n          {name}\r\n        </Typography>\r\n      </CardContent>\r\n\r\n      <CardContent className={classes.content}>\r\n        <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\r\n          {subtitle}\r\n        </Typography>\r\n      </CardContent>\r\n\r\n      <CardActions className={classes.content}>\r\n        {user ? <ProductCreatorIcons /> : null}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport AddOutlinedIcon from \"@material-ui/icons/AddOutlined\";\r\n\r\nimport ProductCard from \"./ProductCard\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  toolbar: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    color: \"black\",\r\n  },\r\n  AddProduct: {\r\n    display: \"flex\",\r\n    width: 230,\r\n    borderRadius: 25,\r\n    margin: 20,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n  },\r\n  AddProductContent: {\r\n    padding: 10,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst products = [\r\n  {\r\n    id: \"1\",\r\n    name: \"Caramel\",\r\n    subtitle: `Dunkin's`,\r\n    price: 45,\r\n    image: \"/images/P6.png\",\r\n    user: \"creator\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    name: \"Floating Daunt \",\r\n    subtitle: `Dunkin's`,\r\n    price: 45,\r\n    image: \"/images/P2.png\",\r\n    user: \"user\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    name: \"Choco\",\r\n    subtitle: `Dunkin's`,\r\n    price: 45,\r\n    image: \"/images/P3.png\",\r\n    user: \"creator\",\r\n  },\r\n  {\r\n    id: \"4\",\r\n    name: \"Vanilla\",\r\n    subtitle: `Dunkin's`,\r\n    price: 45,\r\n    image: \"/images/P4.png\",\r\n    user: true,\r\n  },\r\n  {\r\n    id: \"5\",\r\n    name: \"Red\",\r\n    subtitle: `Dunkin's`,\r\n    image: \"/images/P2.png\",\r\n    price: 45,\r\n    user: \"user\",\r\n  },\r\n  {\r\n    id: \"6\",\r\n    name: \"Pink Donut\",\r\n    subtitle: `Dunkin's`,\r\n    price: 45,\r\n    image: \"/images/P5.png\",\r\n    user: \"user\",\r\n  },\r\n];\r\n\r\nconst Product = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Fragment>\r\n      <AppBar className={classes.root} position=\"static\">\r\n        <Toolbar className={classes.toolbar}>\r\n          <Typography variant=\"h4\" className={classes.title}>\r\n            Product\r\n          </Typography>\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            Add Product\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Grid container className={classes.root}>\r\n        <Grid item xs={12}>\r\n          <Grid container justify=\"start\">\r\n            {products &&\r\n              products.map((product) => (\r\n                <Grid key={product.id} item>\r\n                  <ProductCard\r\n                    name={product.name}\r\n                    subtitle={product.subtitle}\r\n                    price={product.price}\r\n                    image={product.image}\r\n                    user={product.user}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            <Card className={classes.AddProduct} raised>\r\n              <CardContent className={classes.AddProductContent}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"textSecondary\"\r\n                  component=\"p\"\r\n                  gutterBottom\r\n                >\r\n                  Add Product\r\n                </Typography>\r\n                <Typography gutterBottom align=\"center\">\r\n                  <AddOutlinedIcon style={{ fontSize: 40 }} />\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","export const ALL_STOCK_REQUEST = \"ALL_STOCK_REQUEST\";\r\nexport const ALL_STOCK_SUCCESS = \"ALL_STOCK_SUCCESS\";\r\nexport const ALL_STOCK_FAIL = \"ALL_STOCK_FAIL\";\r\n\r\nexport const STOCK_DETAILS_REQUEST = \"STOCK_DETAILS_REQUEST\";\r\nexport const STOCK_DETAILS_SUCCESS = \"STOCK_DETAILS_SUCCESS\";\r\nexport const STOCK_DETAILS_FAIL = \"STOCK_DETAILS_FAIL\";\r\n\r\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";\r\n","import React from \"react\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  toolbar: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    color: \"black\",\r\n  },\r\n  AddProduct: {\r\n    display: \"flex\",\r\n    width: 230,\r\n    borderRadius: 25,\r\n    margin: 20,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n  },\r\n  AddProductContent: {\r\n    padding: 10,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst AppHeader = ({ headerTitle, ButtonClick, buttonTitle }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar position=\"static\" className={classes.root}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Typography variant=\"h5\" color=\"primary\" className={classes.title}>\r\n          {headerTitle}\r\n        </Typography>\r\n        {buttonTitle ? (\r\n          <Button variant=\"contained\" color=\"primary\" onCLick={ButtonClick}>\r\n            {buttonTitle}\r\n          </Button>\r\n        ) : null}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst ChooseDestination = () => {\r\n  return <h1>Choose Destination</h1>;\r\n};\r\nconst ChoosePickup = () => {\r\n  return <h1>Choose Pickup</h1>;\r\n};\r\nconst AddQonatities = () => {\r\n  return <h1>Add Qonatities</h1>;\r\n};\r\nconst CreateJob = () => {\r\n  return <h1>Create Job</h1>;\r\n};\r\n\r\nconst getSteps = () => {\r\n  return [\r\n    \"Choose Destination\",\r\n    \"Choose Pickup\",\r\n    \"Add Qonatities\",\r\n    \"Create Job\",\r\n  ];\r\n};\r\n\r\nconst getStepContent = (stepIndex) => {\r\n  switch (stepIndex) {\r\n    case 0:\r\n      return <ChooseDestination />;\r\n    case 1:\r\n      return <ChoosePickup />;\r\n    case 2:\r\n      return <AddQonatities />;\r\n    case 3:\r\n      return <CreateJob />;\r\n    default:\r\n      return \"Unknown stepIndex\";\r\n  }\r\n};\r\n\r\nconst MoveStockStepper = () => {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed\r\n            </Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className={classes.instructions}>\r\n              {getStepContent(activeStep)}\r\n            </div>\r\n            <div>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                Add More\r\n              </Button>\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={handleNext}\r\n              >\r\n                {activeStep === steps.length - 1 ? \"Create Job\" : \"Done\"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoveStockStepper;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport MoveStockStepper from \"./MoveStockStepper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst MoveStock = () => {\r\n  const classes = useStyles();\r\n\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <Fragment>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          onClick={() => {\r\n            setOpenDrawer(true);\r\n          }}\r\n        >\r\n          Move Stock\r\n        </Button>\r\n        <Drawer className={classes.fullList} anchor=\"top\" open={openDrawer}>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Grid container>\r\n                <Grid item>\r\n                  <IconButton color=\"inherit\">\r\n                    <ArrowBackIosOutlinedIcon />\r\n                  </IconButton>\r\n                </Grid>\r\n                <Grid item className={classes.title}>\r\n                  <Typography variant=\"h6\">Move Stock</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    color=\"inherit\"\r\n                    onClick={() => {\r\n                      setOpenDrawer(false);\r\n                    }}\r\n                  >\r\n                    <CloseIcon />\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <MoveStockStepper />\r\n            </Grid>\r\n          </Grid>\r\n        </Drawer>\r\n      </Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoveStock;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\n\r\n//redux imports\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getStocks } from \"../../actions/stockActions\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport AppHeader from \"../Layout/AppHeader\";\r\nimport MoveStock from \"./MoveStock\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst Stock = () => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, stock, error } = useSelector((state) => state.stock);\r\n\r\n  useEffect(() => {\r\n    dispatch(getStocks());\r\n  }, [dispatch]);\r\n\r\n  const stocks = stock.data;\r\n\r\n  return (\r\n    <Fragment>\r\n      <AppHeader headerTitle=\"Store Stocks\" />\r\n      <div className={classes.table}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"left\">Store</TableCell>\r\n              <TableCell align=\"center\">P1</TableCell>\r\n              <TableCell align=\"center\">P2</TableCell>\r\n              <TableCell align=\"center\">P3</TableCell>\r\n              <TableCell align=\"center\">P4</TableCell>\r\n              <TableCell align=\"center\">P5</TableCell>\r\n              <TableCell align=\"center\">P6</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {stocks &&\r\n              stocks.map((stock) => (\r\n                <TableRow key={stock.storeId}>\r\n                  <TableCell align=\"left\" component=\"th\" scope=\"row\">\r\n                    {stock.storeName}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {stock.products[0]\r\n                      ? stock.products[0].availableQty\r\n                      : \"No product\"}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {stock.products[1]\r\n                      ? stock.products[1].availableQty\r\n                      : \"No product\"}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {stock.products[2]\r\n                      ? stock.products[2].availableQty\r\n                      : \"No product\"}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {stock.products[3]\r\n                      ? stock.products[3].availableQty\r\n                      : \"No product\"}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {stock.products[4]\r\n                      ? stock.products[4].availableQty\r\n                      : \"No product\"}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {stock.products[5]\r\n                      ? stock.products[5].availableQty\r\n                      : \"No product\"}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <MoveStock />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Stock;\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  ALL_STOCK_REQUEST,\r\n  ALL_STOCK_SUCCESS,\r\n  ALL_STOCK_FAIL,\r\n  STOCK_DETAILS_REQUEST,\r\n  STOCK_DETAILS_SUCCESS,\r\n  STOCK_DETAILS_FAIL,\r\n  CLEAR_ERROR,\r\n} from \"../constants/stockConstants\";\r\n\r\nexport const getStocks = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: ALL_STOCK_REQUEST,\r\n    });\r\n\r\n    const { data } = await axios.get(`/api/Stock/GetStockDetails`);\r\n\r\n    dispatch({\r\n      type: ALL_STOCK_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ALL_STOCK_FAIL,\r\n      payload: \"error\",\r\n    });\r\n  }\r\n};\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { pink } from \"@material-ui/core/colors\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport AppSidebar from \"./components/AppSidebar\";\nimport Product from \"./components/Product/Product\";\nimport Stock from \"./components/Stock/Stock\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#FF394F\",\n    },\n    pink: {\n      main: pink[500],\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <Grid container>\n          <Grid item xs={12} md={2}>\n            <AppSidebar />\n          </Grid>\n          <Grid item xs={12} md={10}>\n            <Switch>\n              <Route path=\"/stock\" component={Stock} exact />\n            </Switch>\n          </Grid>\n        </Grid>\n      </ThemeProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport { stockReducer } from \"./reducers/stockReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  stock: stockReducer,\r\n});\r\n\r\nlet intitialState = {};\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  reducer,\r\n  intitialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  ALL_STOCK_REQUEST,\r\n  ALL_STOCK_SUCCESS,\r\n  ALL_STOCK_FAIL,\r\n  STOCK_DETAILS_REQUEST,\r\n  STOCK_DETAILS_SUCCESS,\r\n  STOCK_DETAILS_FAIL,\r\n  CLEAR_ERROR,\r\n} from \"../constants/stockConstants\";\r\n\r\nexport const stockReducer = (state = { stock: [] }, action) => {\r\n  switch (action.type) {\r\n    case ALL_STOCK_REQUEST:\r\n      return {\r\n        loading: true,\r\n        stock: [],\r\n      };\r\n    case ALL_STOCK_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        stock: action.payload.data,\r\n      };\r\n    case ALL_STOCK_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case CLEAR_ERROR:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}